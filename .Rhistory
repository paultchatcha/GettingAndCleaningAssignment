head(data1, 20)
nrow(data1)
NROW(na.omit(data1))
complete <- function(directory, id = 1:332){
modele <- paste("Coursera/", directory, "/%03d.csv", sep="")
fichiers <- vector('character')
assign("feuilles", NULL, envir = .GlobalEnv)
vect <- data.frame(ids = numeric(), nobs = numeric())
for (i in id){
fichiers[i] <- sprintf(modele, i)
feuilles[[i]] <- read.csv(fichiers[i])
vect <- c(i, NROW(na.omit(feuilles[[i]])))
}
vect
}
complete("specdata", 1)
complete <- function(directory, id = 1:332){
modele <- paste("Coursera/", directory, "/%03d.csv", sep="")
fichiers <- vector('character')
assign("feuilles", NULL, envir = .GlobalEnv)
vect <- data.frame("ids" = numeric(), "nobs" = numeric())
for (i in id){
fichiers[i] <- sprintf(modele, i)
feuilles[[i]] <- read.csv(fichiers[i])
vect <- c(i, NROW(na.omit(feuilles[[i]])))
}
vect
}
complete("specdata", 1)
complete <- function(directory, id = 1:332){
modele <- paste("Coursera/", directory, "/%03d.csv", sep="")
fichiers <- vector('character')
assign("feuilles", NULL, envir = .GlobalEnv)
vect <- data.frame(ids = numeric(), nobs = numeric(), stringsAsFactors = FALSE)
for (i in id){
fichiers[i] <- sprintf(modele, i)
feuilles[[i]] <- read.csv(fichiers[i])
vect <- c(i, NROW(na.omit(feuilles[[i]])))
}
vect
}
complete("specdata", 1)
complete <- function(directory, id = 1:332){
modele <- paste("Coursera/", directory, "/%03d.csv", sep="")
fichiers <- vector('character')
assign("feuilles", NULL, envir = .GlobalEnv)
vect <- data.frame(ids = numeric(), nobs = numeric(), stringsAsFactors = TRUE)
for (i in id){
fichiers[i] <- sprintf(modele, i)
feuilles[[i]] <- read.csv(fichiers[i])
vect <- c(i, NROW(na.omit(feuilles[[i]])))
}
vect
}
complete("specdata", 1)
complete <- function(directory, id = 1:332){
modele <- paste("Coursera/", directory, "/%03d.csv", sep="")
fichiers <- vector('character')
assign("feuilles", NULL, envir = .GlobalEnv)
vect <- data.frame(ids = numeric(), nobs = numeric())
for (i in id){
fichiers[i] <- sprintf(modele, i)
feuilles[[i]] <- read.csv(fichiers[i])
vect <- c(i, NROW(na.omit(feuilles[[i]])))
}
names(vect)<- c("id", "nobs")
vect
}
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332){
modele <- paste("Coursera/", directory, "/%03d.csv", sep="")
fichiers <- vector('character')
assign("feuilles", NULL, envir = .GlobalEnv)
vect <- data.frame(ids = numeric(), nobs = numeric())
for (i in id){
fichiers[i] <- sprintf(modele, i)
feuilles[[i]] <- read.csv(fichiers[i])
vect[[i]] <- c(i, NROW(na.omit(feuilles[[i]])))
}
names(vect)<- c("id", "nobs")
vect
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332){
modele <- paste("Coursera/", directory, "/%03d.csv", sep="")
fichiers <- vector('character')
assign("feuilles", NULL, envir = .GlobalEnv)
vect <- data.frame(ids = numeric(), nobs = numeric())
for (i in id){
fichiers[i] <- sprintf(modele, i)
feuilles[[i]] <- read.csv(fichiers[i])
vect[i] <- c(i, NROW(na.omit(feuilles[[i]])))
}
names(vect)<- c("id", "nobs")
vect
}
complete("specdata", c(2, 4, 8, 10, 12))
x <-c(2, 4, 8, 10, 12)
for (i in x) x[i]
for (i in x) print(x[i])
for (i in x) print(x[i])
x <-c(2, 4, 8, 10, 12)
for (i in x) print(x[i])
for (i in seq_along(x)) print(x[i])
complete <- function(directory, id = 1:332){
modele <- paste("Coursera/", directory, "/%03d.csv", sep="")
fichiers <- vector('character')
assign("feuilles", NULL, envir = .GlobalEnv)
vect <- data.frame(ids = numeric(), nobs = numeric())
for (i in seq_along(id)){
fichiers[i] <- sprintf(modele, i)
feuilles[[i]] <- read.csv(fichiers[i])
vect[i] <- c(i, NROW(na.omit(feuilles[[i]])))
}
names(vect)<- c("id", "nobs")
vect
}
complete("specdata", c(2, 4, 8, 10, 12))
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
setwd(dir = "Coursera")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
setwd(dir = "..")
source("Coursera/pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", c(12,110))
pollutantmean("specdata", "sulfate", c(0,1))
pollutantmean("specdata", "sulfate", c(0,23))
pollutantmean("specdata", "sulfate", 23)
source("Coursera/pollutantmean.R")
pollutantmean("specdata", "sulfate", 23)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", c(0,23))
pollutantmean("specdata", "nitrate", c(1,23))
pollutantmean("specdata", "nitrate", c(1))
source("Coursera/complete.R")
complete("specdata", 1)
source("Coursera/complete.R")
complete("specdata", 1)
source("Coursera/complete.R")
complete("specdata", 1)
source("Coursera/complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source("Coursera/complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
x <-c(2, 4, 8, 10, 12)
for (i in seq_along(x)) print(x[i])
for (i in (x)) print(x[i])
for (i in x) print(x[i])
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source("Coursera/complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("Coursera/complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("Coursera/complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("Coursera/complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("Coursera/complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("Coursera/pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
source("Coursera/pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 23)
x <- 70:80
for (i in x) print(x[i])
for (i in seq_along(x)) print(x[i])
source("Coursera/complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("Coursera/complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", c(2, 4, 8, 10, 12))
source("Coursera/complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("Coursera/complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("Coursera/complete.R")
complete("specdata", 1)
source("Coursera/complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
?cor
source("Coursera/corr.R")
corr("specdata", 3)
source("Coursera/complete.R")
source("Coursera/corr.R")
corr("specdata", 3)
source("Coursera/complete.R")
source("Coursera/corr.R")
corr("specdata", 3)
retour <- corr("specdata", 3)
retour2 <- retour[retour$nobs > 1000]
retour2 <- retour[retour$nobs > 1000,]
retour2
source("Coursera/corr.R")
corr("specdata", 1000)
source("Coursera/corr.R")
corr("specdata", 1000)
source("Coursera/corr.R")
corr("specdata", 1000)
source("Coursera/corr.R")
corr("specdata", 1000)
source("Coursera/corr.R")
corr("specdata", 1000)
source("Coursera/corr.R")
source("Coursera/complete.R")
cr <- corr("specdata", 150)
head(cr)
source("Coursera/corr.R")
corr("specdata", 1000)
source("Coursera/complete.R")
source("Coursera/corr.R")
corr("specdata", 1000)
source("Coursera/corr.R")
corr("specdata", 1000)
to_work <- corr("specdata", 1000)
for (i in seq_along(to_work$id)) print(to_work$id[i])
for (i in seq_along(to_work$id)) print(i)
modele <- paste("Coursera/", directory, "/%03d.csv", sep="")
directory <- "specdata"
modele <- paste("Coursera/", directory, "/%03d.csv", sep="")
for (i in seq_along(to_work$id)){fichiers[i] <- sprintf(modele, to_work$id[i])}
fichiers <- vector('character')
for (i in seq_along(to_work$id)){fichiers[i] <- sprintf(modele, to_work$id[i])}
fichiers
assign("feuilles_corr", NULL, envir = .GlobalEnv)
for (i in seq_along(to_work$id)){feuilles_corr[[i]] <- read.csv(fichiers[i])}
feuilles_corr
vect <- vector('numeric')
cor(feuilles_corr[[1]]$sulfate, feuilles_corr[[1]]$nitrate)
cor(feuilles_corr[[1]]$sulfate, feuilles_corr[[1]]$nitrate, use = complete.obs)
cor(feuilles_corr[[1]]$sulfate, feuilles_corr[[1]]$nitrate, use = "complete.obs")
cor(feuilles_corr[[1]]$sulfate, feuilles_corr[[1]]$nitrate, use = "pairwise.complete.obs")
source("Coursera/corr.R")
source("Coursera/complete.R")
cr <- corr("specdata", 150)
head(cr)
source("Coursera/corr.R")
source("Coursera/complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
head(cr)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("Coursera/pollutantmean.R")
source("Coursera/corr.R")
source("Coursera/complete.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
library(datasets)
dataset(iris)
data(iris)
head(iris)
library(datasets)
data(mtcars)
head(mtcars)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
apply(mtcars, 2, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
dir()
?order
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
getwd()
setwd("../datasciencecoursera/UCI HAR Dataset"")
;
setwd("../datasciencecoursera/UCI HAR Dataset")
setwd("../datasciencecoursera/UCI HAR Dataset")
dir()
setwd("../")
X_train <- read.table("./UCI HAR Dataset/train/X_train.txt", header = FALSE)
Y_train <- read.table("./UCI HAR Dataset/train/Y_train.txt", header = FALSE)
X_test <- read.table("./UCI HAR Dataset/test/X_test.txt", header = FALSE)
Y_test <- read.table("./UCI HAR Dataset/test/Y_test.txt", header = FALSE)
activities <- read.table("./UCI HAR Dataset/activity_labels.txt", header = FALSE)
features <- read.table("./UCI HAR Dataset/features.txt", header = FALSE)
library(dplyr)
X_train <- tbl_df(X_train)
X_train
Y_train <- tbl_df(Y_train)
X_test <- tbl_df(X_test)
Y_test <- tbl_df(Y_test)
XY_train <- cbind(Y_train, X_train)
XY_train
XY_train <- tbl_df(XY_train)
XY_train
subject_train <- read.table("./UCI HAR Dataset/train/subject_train.txt", header = FALSE)
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt", header = FALSE)
activities
str(XY_train)
names(XY_train)
names(XY_train)[1] <- "V0"
names(XY_train)
XY_train_f1 <- merge(XY_train, activities, by.x = "V0", by.y = "V1")
str(XY_train_f1)
activities
head(XY_train_f1)
str(XY_train_f1)
XY_test <- cbind(Y_test, X_test)
names(XY_test)
names(XY_test)[1] <- "V0"
XY_test_f1 <- merge(XY_test, activities, by.x = "V0", by.y = "V1")
head(XY_test_f1)
XY_train_f2 <- cbind(subject_train, XY_train_f1)
XY_test_f2 <- cbind(subject_test, XY_test_f1)
head(XY_test_f2)
head(features)
tetes <- as.character(features$V2)
tetes <- c("subjects", "activity_id", tetes, "activity")
names(XY_train_f2) <- tetes
head(XY_test_f2)
head(XY_train_f2)
names(XY_test_f2) <- tetes
XY <- rbind(XY_train_f2, XY_test_f2)
XY <- tbl_df(XY)
XY
names(XY)
grep(pattern = ["mean()""std()"], names(XY))
grep(pattern = "[mean()std()]", names(XY))
grep(pattern = "mean()", names(XY))
grep(pattern = "mean()", names(XY), value = TRUE)
grep(pattern = "mean\(\)", names(XY), value = TRUE)
grep(pattern = "mean\\(\\)", names(XY), value = TRUE)
grep(pattern = "mean\\(\\)|std\\(\\)", names(XY), value = TRUE)
needed_vars <- grep(pattern = "mean\\(\\)|std\\(\\)", names(XY), value = TRUE)
names(XY)
needed_vars <- c("subjects", "activity", needed_vars)
step_two <- select(XY, needed_vars)
?select
step_two <- select(XY, match(needed_vars, names(XY))
)
step_two <- select(XY, match(needed_vars, names(XY)))
step_two <- XY %>% select(needed_vars)
needed_vars
match(names(XY), needed_vars)
match(names(XY), needed_vars, na.rm=TRUE)
?match
step_two <- select(XY, needed_vars)
match(needed_vars, names(XY))
step_two <- select(XY, match(needed_vars, names(XY)))
step_two <- XY %>% select(match(needed_vars, names(XY)))
names(XY)
step_two <- XY %>% select(match(needed_vars, names(XY)))
XY2 <- XY[, !duplicated(colnames(XY))]
names(XY2)
names(XY2)
gsub(pattern = ',', '', names(XY2))
names(XY2)
step_two <- XY[,needed_vars]
head(step_two)
names(step_two)
step_two <- tbl_df(step_two)
gsub(pattern = "()", "", names(step_two))
gsub(pattern = "(", "", names(step_two))
gsub(pattern = "\\(\\)", "", names(step_two))
a <- gsub(pattern = "\\(\\)", "", names(step_two))
b <- gsub(pattern = "-", "", names(step_two))
b
b <- gsub(pattern = "-", "", names(a))
b
a
b <- gsub(pattern = "\-", "", names(a))
b <- gsub(pattern = "\\-", "", names(a))
b
b <- gsub(pattern = "-", "", a)
b
a
names(step_two) <- a
names(step_two)
step_two
?group_by
grouped_xy <- group_by(step_two, subjects, activity)
grouped_xy
summarize(grouped_xy, test=mean(tBodyAcc-mean-X, na.rm = TRUE))
b
names(step_two) <- b
grouped_xy <- group_by(step_two, subjects, activity)
summarize(grouped_xy, test=mean(tBodyAccmeanX, na.rm = TRUE))
inter <- summarize(grouped_xy, test_mean=mean(tBodyAccmeanX, na.rm = TRUE))
inter
inter[40,]
inter[1:40,]
inter[1:15]
inter[1:15,]
inter[1:30,]
inter[1:20,]
print(inter)
print(inter, n=40)
inter <- summarise_each(grouped_xy, mean(tBodyAccmeanX, na.rm = TRUE))
inter <- summarise_each(grouped_xy, mean(na.rm = TRUE))
?summarise_each
inter <- summarise_each(grouped_xy, funs(mean))
inter
inter
library(dplyr)
inter
?avg
setwd("./GettingAndCleaningAssignment")
names(Y_train) <- "activity_id"
names(step_two)
needed_vars
gsub(pattern = "\\(\\)-", "", needed_vars)
gsub(pattern = "\\(\\)|-", "", needed_vars)
paste0("Avg", needed_vars)
source("run_analysis.R")
run_analysis()
head(step_two)
X_train <- read.table("../UCI HAR Dataset/train/X_train.txt", header = FALSE)
X_train <- read.table("../UCI HAR Dataset/train/X_train.txt", header = FALSE)
Y_train <- read.table("../UCI HAR Dataset/train/Y_train.txt", header = FALSE)
names(Y_train) <- "activity_id"
X_test <- read.table("../UCI HAR Dataset/test/X_test.txt", header = FALSE)
Y_test <- read.table("../UCI HAR Dataset/test/Y_test.txt", header = FALSE)
names(Y_test) <- "activity_id"
activities <- read.table("../UCI HAR Dataset/activity_labels.txt", header = FALSE)
features <- read.table("../UCI HAR Dataset/features.txt", header = FALSE)
subject_train <- read.table("../UCI HAR Dataset/train/subject_train.txt", header = FALSE)
subject_test <- read.table("../UCI HAR Dataset/test/subject_test.txt", header = FALSE)
XY_train <- cbind(Y_train, X_train) #For training
XY_test <- cbind(Y_test, X_test) # For test
XY_train_f1 <- merge(XY_train, activities, by.x = "activity_id", by.y = "V1")
XY_test_f1 <- merge(XY_test, activities, by.x = "activity_id", by.y = "V1")
XY_train_f2 <- cbind(subject_train, XY_train_f1)
XY_test_f2 <- cbind(subject_test, XY_test_f1)
tetes <- as.character(features$V2)
tetes <- c("subjects", "activity_id", tetes, "activity")
names(XY_train_f2) <- tetes
names(XY_test_f2) <- tetes
XY <- rbind(XY_train_f2, XY_test_f2)
needed_vars <- grep(pattern = "mean\\(\\)|std\\(\\)", names(XY), value = TRUE)
needed_vars <- c("subjects", "activity", needed_vars) # Step 3 Done !
step_two <- XY[,needed_vars] # Step 2 Done!
a <- gsub(pattern = "\\(\\)", "", names(step_two))
b <- gsub(pattern = "-", "", names(a))
names(step_two) <- b
library(dplyr)
step_four <- tbl_df(step_two)
str(step_two)
b
a
source("run_analysis.R")
run_analysis()
solution <- run_analysis()
source("run_analysis.R")
solution <- run_analysis()
solution
names(solution)
names(solution)[2:]
names(solution)[2:68]
names(solution)[3:68]
source("run_analysis.R")
solution <- run_analysis()
solution
source("run_analysis.R")
solution <- run_analysis()
solution
solution[,1:6]
solution[1:30,1:6]
solution[1:20,1:6]
names(solution)
names(solution)
